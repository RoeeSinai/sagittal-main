const {computeSizeCategory} = require("../../../../src/findCommas/utilities/sizeCategory")

describe("computeSizeCategory", () => {
    it("returns the correct size category per the amount of cents", () => {
        expect(computeSizeCategory(1)).toBe("n")
        expect(computeSizeCategory(2)).toBe("s")
        expect(computeSizeCategory(10)).toBe("k")
        expect(computeSizeCategory(20)).toBe("C")
        expect(computeSizeCategory(40)).toBe("S")
        expect(computeSizeCategory(50)).toBe("M")
        expect(computeSizeCategory(60)).toBe("L")
        expect(computeSizeCategory(80)).toBe("SS")
        expect(computeSizeCategory(100)).toBe("MS")
        expect(computeSizeCategory(110)).toBe("LS")
        expect(computeSizeCategory(115)).toBe("A")
        expect(computeSizeCategory(117)).toBe("s+A")
        expect(computeSizeCategory(120)).toBe("k+A")
        expect(computeSizeCategory(135)).toBe("C+A")
        expect(computeSizeCategory(155)).toBe("S+A")
        expect(computeSizeCategory(165)).toBe("M+A")
        expect(computeSizeCategory(175)).toBe("L+A")
        expect(computeSizeCategory(190)).toBe("SS+A")
        expect(computeSizeCategory(200)).toBe("MS+A")
        expect(computeSizeCategory(220)).toBe("LS+A")
        expect(computeSizeCategory(230)).toBe("A+A")
    })

    it("works when not abbreviated", () => {
        expect(computeSizeCategory(1, {abbreviated: false})).toBe("schismina")
        expect(computeSizeCategory(2, {abbreviated: false})).toBe("schisma")
        expect(computeSizeCategory(10, {abbreviated: false})).toBe("kleisma")
        expect(computeSizeCategory(20, {abbreviated: false})).toBe("Comma")
        expect(computeSizeCategory(40, {abbreviated: false})).toBe("Small-Diesis")
        expect(computeSizeCategory(50, {abbreviated: false})).toBe("Medium-Diesis")
        expect(computeSizeCategory(60, {abbreviated: false})).toBe("Large-Diesis")
        expect(computeSizeCategory(80, {abbreviated: false})).toBe("Small-Semitone")
        expect(computeSizeCategory(100, {abbreviated: false})).toBe("Medium-Semitone")
        expect(computeSizeCategory(110, {abbreviated: false})).toBe("Large-Semitone")
        expect(computeSizeCategory(115, {abbreviated: false})).toBe("Apotome")
        expect(computeSizeCategory(117, {abbreviated: false})).toBe("schisma-plus-Apotome")
        expect(computeSizeCategory(120, {abbreviated: false})).toBe("kleisma-plus-Apotome")
        expect(computeSizeCategory(135, {abbreviated: false})).toBe("Comma-plus-Apotome")
        expect(computeSizeCategory(155, {abbreviated: false})).toBe("Small-Diesis-plus-Apotome")
        expect(computeSizeCategory(165, {abbreviated: false})).toBe("Medium-Diesis-plus-Apotome")
        expect(computeSizeCategory(175, {abbreviated: false})).toBe("Large-Diesis-plus-Apotome")
        expect(computeSizeCategory(190, {abbreviated: false})).toBe("Small-Semitone-plus-Apotome")
        expect(computeSizeCategory(200, {abbreviated: false})).toBe("Medium-Semitone-plus-Apotome")
        expect(computeSizeCategory(220, {abbreviated: false})).toBe("Large-Semitone-plus-Apotome")
        expect(computeSizeCategory(230, {abbreviated: false})).toBe("double-Apotome")
    })

    it("works when the size is huge", () => {
        expect(computeSizeCategory(999999)).toBe("A+A")
    })
})
